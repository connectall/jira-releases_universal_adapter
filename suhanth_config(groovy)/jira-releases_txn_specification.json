[{"schemeId":4,"schemeName":"Release","adapterType":"jira-releases","group":null,"active":true,"adapterMetadataList":[],"requestHeaders":[],"restTemplates":{"CREATE_RECORD":{"templateId":4,"operation":"CREATE_RECORD","httpVerb":"POST","restUrl":"rest/api/2/${artifact}","specifications":{"Response":{"specId":12,"type":"Response","adapterType":null,"specType":"JOLT","status":"Active","specification":"[\n  {\n    \"operation\": \"shift\",\n    \"spec\": {\n      \"id\": \"&\",\n      \"released\": {\n        \"false\": {\n          \"#Not Released\": \"fields.released\"\n        },\n        \"true\": {\n          \"#Released\": \"fields.released\"\n        }\n      },\n      \"overdue\": {\n        \"false\": {\n          \"#Not Overdue\": \"fields.overdue\"\n        },\n        \"true\": {\n          \"#Overdue\": \"fields.overdue\"\n        }\n      },\n      \"archived\": {\n        \"false\": {\n          \"#Not Archived\": \"fields.archived\"\n        },\n        \"true\": {\n          \"#Archived\": \"fields.archived\"\n        }\n      },\n      \"*\": \"fields.&\"\n    }\n  },\n  {\n    \"operation\": \"shift\",\n    \"spec\": {\n      \"id\": \"&\",\n      \"fields\": \"&\"\n    }\n  }\n ]\n","samplePayload":"{\n    \"self\": \"https://jira8.connectall.com/rest/api/2/version/10503\",\n    \"id\": \"10503\",\n    \"description\": \"version 4 for UA\",\n    \"name\": \"Version 4 from postman\",\n    \"archived\": false,\n    \"released\": true,\n    \"startDate\": \"2023-01-18\",\n    \"releaseDate\": \"2023-06-18\",\n    \"userStartDate\": \"18/Jan/23\",\n    \"userReleaseDate\": \"18/Jun/23\",\n    \"projectId\": 11000\n}","contentAvailable":true,"statusCode":2},"Request":{"specId":11,"type":"Request","adapterType":null,"specType":"JOLT","status":"Active","specification":"[\n  {\n    \"operation\": \"remove\",\n    \"spec\": {\n      \"fields\": {\n        \"project\": \"\"\n      }\n    }\n  },\n  {\n    \"operation\": \"shift\",\n    \"spec\": {\n      \"fields\": {\n        \"*\": \"&\"\n      }\n    }\n  }\n  ]\n","samplePayload":"{\n  \"fields\": {\n    \"summary\": \"Test for API creation 2\",\n    \"description\": \"Test for API creation 2\",\n    \"priority\": \"1\",\n    \"modifiedTime\": \"01-04-2019 11:46:30.124\",\n    \"severity\": \"2\",\n    \"status\": \"Open\"\n  }\n}","contentAvailable":true,"statusCode":2}}},"UPDATE_RECORD":{"templateId":6,"operation":"UPDATE_RECORD","httpVerb":"PUT","restUrl":"rest/api/2/${artifact}/${recordId}","specifications":{"Response":{"specId":10,"type":"Response","adapterType":null,"specType":"JOLT","status":"Active","specification":"[\n  {\n    \"operation\": \"shift\",\n    \"spec\": {\n      \"id\": \"&\",\n      \"released\": {\n        \"false\": {\n          \"#Not Released\": \"fields.released\"\n        },\n        \"true\": {\n          \"#Released\": \"fields.released\"\n        }\n      },\n      \"overdue\": {\n        \"false\": {\n          \"#Not Overdue\": \"fields.overdue\"\n        },\n        \"true\": {\n          \"#Overdue\": \"fields.overdue\"\n        }\n      },\n      \"archived\": {\n        \"false\": {\n          \"#Not Archived\": \"fields.archived\"\n        },\n        \"true\": {\n          \"#Archived\": \"fields.archived\"\n        }\n      },\n      \"*\": \"fields.&\"\n    }\n  },\n  {\n    \"operation\": \"shift\",\n    \"spec\": {\n      \"id\": \"&\",\n      \"fields\": \"&\"\n    }\n  }\n ]\n","samplePayload":"{\n    \"self\": \"https://jira8.connectall.com/rest/api/2/version/10503\",\n    \"id\": \"10503\",\n    \"description\": \"version 4 for UA\",\n    \"name\": \"Version 4 from postman\",\n    \"archived\": false,\n    \"released\": true,\n    \"startDate\": \"2023-01-18\",\n    \"releaseDate\": \"2023-06-18\",\n    \"userStartDate\": \"18/Jan/23\",\n    \"userReleaseDate\": \"18/Jun/23\",\n    \"projectId\": 11000\n}","contentAvailable":true,"statusCode":2},"Request":{"specId":9,"type":"Request","adapterType":null,"specType":"JOLT","status":"Active","specification":"[\n  {\n    \"operation\": \"remove\",\n    \"spec\": {\n      \"id\": \"\",\n      \"fields\": {\n        \"project\": \"\",\n        \"id\": \"\"\n      }\n    }\n  },\n  {\n    \"operation\": \"shift\",\n    \"spec\": {\n      \"fields\": {\n        \"*\": \"&\"\n      }\n    }\n  }\n  ]\n","samplePayload":"{\n  \"id\": \"TP-4\",\n  \"fields\": {\n    \"summary\": \"Test for API creation 2\",\n    \"description\": \"Test for API creation 2\",\n    \"assignee\": \"admin\",\n    \"priority\": \"1\",\n    \"reporter\": \"admin\"\n  }\n}","contentAvailable":true,"statusCode":2}}},"QUERY_MODIFIED_RECORDS":{"templateId":7,"operation":"QUERY_MODIFIED_RECORDS","httpVerb":"GET","restUrl":"rest/api/2/project/${project}/${artifact}?orderBy=-sequence","specifications":{"Response":{"specId":8,"type":"Response","adapterType":null,"specType":"Groovy","status":"Active","specification":"class CAResponse {\n    int totalRecords;\n    List < CAResponseResult > result;\n}\nclass CAResponseResult {\n    String id;\n    Map fields;\n}\ndef jsonS = new groovy.json.JsonSlurper()\ndef appResponse = jsonS.parseText(payload) as Map\n\ndef _response = new CAResponse();\n_response.totalRecords = appResponse.values.size();\n_resultArray = new ArrayList();\nfor (def card: appResponse.values) {\n    def _record = new CAResponseResult();\n    _record.id = card.id;\n    def _fields = new HashMap();\n\n    // Copy fields\n    for (Map.Entry < String, Object > cardField: card.entrySet()) {\n        if (cardField.value instanceof String && cardField.key == \"id\") {\n            _mapid = cardField.value\n        } else if (cardField.value instanceof String && cardField.key != \"id\") {\n            _fields.put(cardField.key, cardField.value)\n        } else if (cardField.value instanceof Boolean) {\n            _fields.put(cardField.key, cardField.value)\n        } else if (cardField.value instanceof Integer) {\n            _fields.put(cardField.key, cardField.value)\n        }\n        _fields.put(\"modifiedDate\", new Date())\n    }\n    _record.fields = _fields;\n    _resultArray.add(_record);\n}\n_response.result = _resultArray\n\n\n\n\ngroovy.json.JsonOutput.toJson(_response)","samplePayload":"{\n  \"self\": \"https://jira8.connectall.com/rest/api/2/project/DEMO/version?maxResults=50&orderBy=name&startAt=0\",\n  \"maxResults\": 50,\n  \"startAt\": 0,\n  \"total\": 8,\n  \"isLast\": true,\n  \"values\": [\n    {\n      \"self\": \"https://jira8.connectall.com/rest/api/2/version/10506\",\n      \"id\": \"10506\",\n      \"name\": \"Again Updated Version 7\",\n      \"archived\": false,\n      \"released\": false,\n      \"projectId\": 11000\n    },\n    {\n      \"self\": \"https://jira8.connectall.com/rest/api/2/version/10500\",\n      \"id\": \"10500\",\n      \"description\": \"version 1 for UA\",\n      \"name\": \"Release 1\",\n      \"archived\": false,\n      \"released\": false,\n      \"startDate\": \"2023-01-18\",\n      \"releaseDate\": \"2023-06-18\",\n      \"overdue\": false,\n      \"userStartDate\": \"18/Jan/23\",\n      \"userReleaseDate\": \"18/Jun/23\",\n      \"projectId\": 11000\n    },\n    {\n      \"self\": \"https://jira8.connectall.com/rest/api/2/version/10501\",\n      \"id\": \"10501\",\n      \"description\": \"version 2 for UA\",\n      \"name\": \"Release 2\",\n      \"archived\": false,\n      \"released\": false,\n      \"startDate\": \"2023-01-19\",\n      \"releaseDate\": \"2023-02-19\",\n      \"overdue\": false,\n      \"userStartDate\": \"19/Jan/23\",\n      \"userReleaseDate\": \"19/Feb/23\",\n      \"projectId\": 11000\n    },\n    {\n      \"self\": \"https://jira8.connectall.com/rest/api/2/version/10502\",\n      \"id\": \"10502\",\n      \"description\": \"version 3 for UA\",\n      \"name\": \"Release 3\",\n      \"archived\": false,\n      \"released\": false,\n      \"startDate\": \"2023-01-30\",\n      \"releaseDate\": \"2023-07-19\",\n      \"overdue\": false,\n      \"userStartDate\": \"30/Jan/23\",\n      \"userReleaseDate\": \"19/Jul/23\",\n      \"projectId\": 11000\n    },\n    {\n      \"self\": \"https://jira8.connectall.com/rest/api/2/version/10503\",\n      \"id\": \"10503\",\n      \"description\": \"version 4 for UA\",\n      \"name\": \"Version 4 from postman\",\n      \"archived\": false,\n      \"released\": true,\n      \"startDate\": \"2023-01-18\",\n      \"releaseDate\": \"2023-06-18\",\n      \"userStartDate\": \"18/Jan/23\",\n      \"userReleaseDate\": \"18/Jun/23\",\n      \"projectId\": 11000\n    },\n    {\n      \"self\": \"https://jira8.connectall.com/rest/api/2/version/10504\",\n      \"id\": \"10504\",\n      \"description\": \"version 5 for UA\",\n      \"name\": \"Version 5 from postman\",\n      \"archived\": false,\n      \"released\": false,\n      \"projectId\": 11000\n    },\n    {\n      \"self\": \"https://jira8.connectall.com/rest/api/2/version/10505\",\n      \"id\": \"10505\",\n      \"description\": \"version 6 for UA\",\n      \"name\": \"Version 6 from postman\",\n      \"archived\": false,\n      \"released\": false,\n      \"projectId\": 11000\n    },\n    {\n      \"self\": \"https://jira8.connectall.com/rest/api/2/version/10507\",\n      \"id\": \"10507\",\n      \"name\": \"Version 8 from postman\",\n      \"archived\": false,\n      \"released\": false,\n      \"projectId\": 11000\n    }\n  ]\n}","contentAvailable":true,"statusCode":2},"Request":{"specId":7,"type":"Request","adapterType":null,"specType":null,"status":"Active","specification":null,"samplePayload":null,"contentAvailable":false,"statusCode":2}}},"QUERY_RECORD_BY_ID":{"templateId":5,"operation":"QUERY_RECORD_BY_ID","httpVerb":"GET","restUrl":"rest/api/2/${artifact}/${recordId}","specifications":{"Response":{"specId":14,"type":"Response","adapterType":null,"specType":"Groovy","status":"Active","specification":"class CAResponseResult {\n    String id;\n    Map fields;\n}\n\ndef jsonS = new groovy.json.JsonSlurper()\ndef card = jsonS.parseText(payload) as Map\n\ndef _record = new CAResponseResult();\ndef _fields = new HashMap();\ndef _mapid = new String();\n// Copy fields\nfor (Map.Entry < String, Object > cardField: card.entrySet()) {\n    if (cardField.value instanceof String && cardField.key == \"id\") {\n        _mapid = cardField.value\n    } else if (cardField.value instanceof String && cardField.key != \"id\") {\n        _fields.put(cardField.key, cardField.value)\n    } else if (cardField.value instanceof Boolean) {\n        _fields.put(cardField.key, cardField.value)\n    } else if (cardField.value instanceof Integer) {\n        _fields.put(cardField.key, cardField.value)\n    }\n    _fields.put(\"modifiedDate\", new Date())\n}\n_record.id = _mapid;\n_record.fields = _fields;\ngroovy.json.JsonOutput.toJson(_record)","samplePayload":"{\n    \"self\": \"https://jira8.connectall.com/rest/api/2/version/10500\",\n    \"id\": \"10500\",\n    \"description\": \"version 1 for UA\",\n    \"name\": \"Release 1\",\n    \"archived\": false,\n    \"released\": false,\n    \"startDate\": \"2023-01-18\",\n    \"releaseDate\": \"2023-06-18\",\n    \"overdue\": false,\n    \"userStartDate\": \"18/Jan/23\",\n    \"userReleaseDate\": \"18/Jun/23\",\n    \"projectId\": 11000\n}","contentAvailable":true,"statusCode":2},"Request":{"specId":13,"type":"Request","adapterType":null,"specType":null,"status":"Active","specification":null,"samplePayload":null,"contentAvailable":false,"statusCode":2}}}},"default":true}]